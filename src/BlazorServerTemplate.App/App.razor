@using BlazorServerTemplate.App.Features.Auth
@using BlazorServerTemplate.Data;
@using Microsoft.EntityFrameworkCore;

<CascadingAuthenticationState>
    <CascadingValue Value="AppParameters" IsFixed="true">
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <Authorizing>
                        <p>Determining session state, please wait...</p>
                    </Authorizing>
                    <NotAuthorized>
                        @if (context.User.Identity is not null && context.User.Identity.IsAuthenticated)
                        {
                            <MudAlert Severity="Severity.Error">You are not authorized to view this page.</MudAlert>
                        }
                        else
                        {
                            <RedirectToLogin/>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
                <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingValue>
</CascadingAuthenticationState>

@code {
    [Parameter] public AppParameters AppParameters { get; set; } = null!;
    [Inject] private IDbContextFactory<AppDbContext> ContextFactory { get; set; } = null!;

    protected override void OnInitialized()
    {
        AppParameters.ContextFactory = ContextFactory;
    }
}
