@attribute [Route(Constants.Routes.HomePage)]
@inject IJSRuntime JsRuntime

<MudText Typo="Typo.h3" GutterBottom="true">Home</MudText>
<MudText Typo="Typo.h5" Class="mb-4">Welcome to the blazor server template app!</MudText>
<MudGrid>
    @if (_isTestEnvironment)
    {
        <MudItem xs="12">
            <MudExpansionPanels>
                <MudExpansionPanel Text="User claims (debug information)">
                    <MudSimpleTable Style="overflow-x: auto;">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (_authState is not null)
                            {
                                @foreach (var claim in _authState.User.Claims)
                                {
                                    <tr>
                                        <td>@claim.Type</td>
                                        <td>@claim.Value</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudItem>
    }
</MudGrid>

@code {
    private bool _isTestEnvironment;
    private AuthenticationState? _authState;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _authState = await AuthenticationStateTask;
        _isTestEnvironment = await IsTestEnvironment();
    }

    private async Task<bool> IsTestEnvironment()
    {
        return await JsRuntime.InvokeAsync<bool>("isTestEnvironment");
    }
}
